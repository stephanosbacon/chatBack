#! /bin/bash

# $1 should be a filename containing a secret]
if [ $# -eq 0 ]; then
  echo 'Required arg is a filename containing a secret (jwtsecret)'
  exit 1
fi

set -v

# oc cluster up --public-hostname 127.0.0.1

oc login -u system:admin

# give the developer user cluster admin privs
oc adm policy add-cluster-role-to-user cluster-admin developer
oc login -u developer -p developer

# create the chat project
oc new-project chat
oc project chat

# create a secret
oc secret new jwtsecret jwtsecret=$1

oc new-app --docker-image=mongo

# deleting it so we can expose it with type=NodePort
# Another alternative would be to oc patch the yaml for it
oc delete service mongo
oc expose dc mongo --type=NodePort

oc new-app bucharestgold/centos7-s2i-nodejs:7.6.0~https://github.com/stephanosbacon/chatBack \
           -e PROTOCOL=http \
           -e SERVICE_PORT=8080 \
           -e MONGO_SERVICE_HOST=mongo

# set the image pull policy to "Never" since we want to use the local docker image generated by our build
# the first deployment will fail, but the next time around should work
oc patch dc/chatback -p '{"spec": {"template": {"spec": {"containers": [{"imagePullPolicy": "Never", "name": "chatback"}]}}}}'

# now associate the secret with it
oc patch dc/chatback -p '{"spec": {"template": {"spec": {"containers": [{ "name": "chatback", "env": [{	"name": "JWT_SECRET", "valueFrom": { "secretKeyRef": { "name": "jwtsecret", "key": "jwtsecret" }}}]}]}}}}'

oc rollout latest  dc/chatback

oc delete service chatback
oc expose dc chatback --type=NodePort

# the tester pod
oc new-app --docker-image=cbtest \
           -e PROTOCOL=http \
           -e MONGO_SERVICE_HOST=mongo \
           -e SERVICE_PORT=3000 \
           -e MONGO_SERVICE_PORT=27017 \
           -e JWT_SECRET=somefoo \
           -e SERVICE_HOST=chatback

# set the image pull policy to "Never" since we want to use the local docker image generated by our build
oc patch dc/cbtest -p '{"spec": {"template": {"spec": {"containers": [{"imagePullPolicy": "Never", "name": "cbtest"}]}}}}'
oc patch dc/cbtest -p '{"spec": {"template": {"spec": {"containers": [{ "name": "cbtest", "env": [{	"name": "JWT_SECRET", "valueFrom": { "secretKeyRef": { "name": "jwtsecret", "key": "jwtsecret" }}}]}]}}}}'
oc rollout latest dc/cbtest
