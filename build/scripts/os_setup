#! /bin/bash

# oc cluster up --public-hostname 127.0.0.1
# minishift start

set -v
oc login -u system:admin
oc adm policy add-cluster-role-to-user cluster-admin developer
oc login -u developer -p developer
oc new-project chat
oc project chat
oc new-app --docker-image=mongo

# deleting it so we can expose it with type=NodePort
# Another alternative would be to oc patch the yaml for it
oc delete service mongo
oc expose dc mongo --type=NodePort

oc new-app --docker-image=chatback \
           -e PROTOCOL=http \
           -e PORT=3000 \
           -e MONGO_SERVICE_HOST=mongo \
           -e JWT_SECRET=somefoo

# set the image pull policy to "Never" since we want to use the local docker image generated by our build
# the first deployment will fail, but the next time around should work
oc patch dc/chatback -p '{"spec": {"template": {"spec": {"containers": [{"imagePullPolicy": "Never", "name": "chatback"}]}}}}'
oc deploy chatback

oc delete service chatback
oc expose dc chatback --type=NodePort

# the tester pod
oc new-app --docker-image=cbtest \
           -e PROTOCOL=http \
           -e MONGO_SERVICE_HOST=mongo \
           -e PORT=3000 \
           -e JWT_SECRET=somefoo \
           -e SERVER_HOST=chatback

# set the image pull policy to "Never" since we want to use the local docker image generated by our build
oc patch dc/cbtest -p '{"spec": {"template": {"spec": {"containers": [{"imagePullPolicy": "Never", "name": "cbtest"}]}}}}'
oc deploy cbtest
